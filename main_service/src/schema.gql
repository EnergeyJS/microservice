# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Admin {
  _id: ObjectId!
  email: String!
  name: String!
}

input AdminInput {
  name: String!
  password: String!
  email: String!
}

type Auth {
  token: String!
  user: User!
}

type Book {
  _id: String!
  name: String!
  author: User!
  price: Float!
}

type BookPaginateModel {
  docs: [Book!]!
  totalDocs: Int!
  limit: Int!
  hasPrevPage: Boolean!
  hasNextPage: Boolean!
  page: Int!
  totalPages: Int!
  prevPage: Int
  nextPage: Int
}

input CreateBookInput {
  name: String!
  author: String!
  price: Float!
}

input CreateUserInput {
  email: String
  name: String
  password: String
}

type Mutation {
  createBook(input: CreateBookInput): Book!
  updateBook(input: UpdateBookInput, _id: String): Book!
  deleteBook(_id: String): String!
  createAdmins(data: AdminInput): Admin!
  createUser(data: CreateUserInput): User!
  updateUser(data: UpdateUserInput, _id: ObjectId): User!
  deleteUser(_id: ObjectId): User!
  login(email: String, password: String): Auth!
}

"""Mongo object id scalar type"""
scalar ObjectId

input PaginationInput {
  page: Int!
  limit: Int!
}

type Query {
  books(pagination: PaginationInput): BookPaginateModel!
  admins: [Admin!]!
  users(pagination: PaginationInput): UserPaginateModel!
}

input UpdateBookInput {
  name: String
  author: String
  price: Float
}

input UpdateUserInput {
  email: String
  name: String
}

type User {
  _id: String
  email: String!
  name: String!
}

type UserPaginateModel {
  docs: [User!]!
  totalDocs: Int!
  limit: Int!
  hasPrevPage: Boolean!
  hasNextPage: Boolean!
  page: Int!
  totalPages: Int!
  prevPage: Int
  nextPage: Int
}
